import{_ as a,c as s,o as e,R as n}from"./chunks/framework.70e71619.js";const u=JSON.parse('{"title":"Global Query Parameters","description":"REST and GraphQL API documentation to run queries in Directus.","frontmatter":{"description":"REST and GraphQL API documentation to run queries in Directus.","readTime":"9 min read","pageClass":"page-reference"},"headers":[],"relativePath":"reference/query.md","lastUpdated":1682552691000}'),l={name:"reference/query.md"},t=n(`<h1 id="global-query-parameters" tabindex="-1">Global Query Parameters <a class="header-anchor" href="#global-query-parameters" aria-label="Permalink to &quot;Global Query Parameters&quot;">​</a></h1><blockquote><p>Most Directus API Endpoint operations can be manipulated with the following parameters. It is important to understand them to get the most out of the platform.</p></blockquote><ul><li><a href="#fields">Fields</a></li><li><a href="#filter">Filter</a></li><li><a href="#search">Search</a></li><li><a href="#sort">Sort</a></li><li><a href="#limit">Limit</a></li><li><a href="#offset">Offset</a> / <a href="#page">Page</a></li><li><a href="#aggregation-grouping">Aggregation &amp; Grouping</a></li><li><a href="#deep">Deep</a></li><li><a href="#aliases">Aliases</a></li><li><a href="#export">Export</a></li><li><a href="#functions">Functions</a></li><li><a href="#metadata">Metadata</a><ul><li><a href="#total-count">Total Count</a></li><li><a href="#filter-count">Filter Count</a></li></ul></li></ul><hr><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h2><p>Choose the fields that are returned in the current dataset. This parameter supports dot notation to request nested relational fields. You can also use a wildcard (*) to include all fields at a specific depth.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Get all top-level fields<br><code>*</code></p><p>Get all top-level fields and all second-level relational fields<br><code>*.*</code></p><div class="tip custom-block"><p class="custom-block-title">Performance &amp; Size</p><p>While the fields wildcard is very useful for debugging purposes, we recommend only requesting <em>specific</em> fields for production use. By only requesting the fields you really need, you can speed up the request, and reduce the overall output size.</p></div><p>Get all top-level fields and second-level relational fields within images<br><code>*,images.*</code></p><p>Get only the first_name and last_name fields<br><code>first_name,last_name</code></p><p>Get all top-level and second-level relational fields, and third-level fields within images.thumbnails<br><code>*.*,images.thumbnails.*</code></p><h3 id="many-to-any-union-types" tabindex="-1">Many-To-Any (Union Types) <a class="header-anchor" href="#many-to-any-union-types" aria-label="Permalink to &quot;Many-To-Any (Union Types)&quot;">​</a></h3><p>Seeing that Many-to-Any (M2A) fields have nested data from multiple collections, it&#39;s not always safe / wanted to fetch the same field from every related collection. In M2A fields, you can use the following syntax to specify what fields to fetch from which related nested collection type:<br><code>?fields=&lt;m2a-field&gt;:&lt;collection-scope&gt;.&lt;field&gt;</code>.</p><p>Lets say we have a collection <code>pages</code> with a many-to-any field called <code>sections</code> that points to <code>headings</code>, <code>paragraphs</code>, and <code>videos</code>. We only want to fetch <code>title</code> and <code>level</code> from <code>headings</code>, <code>body</code> from <code>paragraphs</code> and <code>source</code> from <code>videos</code>. We can achieve that by using:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sections.item:headings.title</span></span>
<span class="line"><span style="color:#A6ACCD;">sections.item:headings.level</span></span>
<span class="line"><span style="color:#A6ACCD;">sections.item:paragraphs.body</span></span>
<span class="line"><span style="color:#A6ACCD;">sections.item:videos.source</span></span></code></pre></div><p>In GraphQL, this can be achieved using Union Types.</p><h3 id="rest-api" tabindex="-1">REST API <a class="header-anchor" href="#rest-api" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?fields=title,body,featured_image.*</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// or</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?fields[]=title</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;fields[]=body</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;fields[]=featured_image.*</span></span></code></pre></div><h3 id="graphql" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><p><em>Natively supported in GraphQL</em></p><hr><h2 id="filter" tabindex="-1">Filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;Filter&quot;">​</a></h2><p>Used to search items in a collection that matches the filter&#39;s conditions. The filter param follows <a href="/reference/filter-rules.html">the Filter Rules spec</a>, which includes additional information on logical operators (AND/OR), nested relational filtering, and dynamic variables.</p><h3 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Retrieve all items where <code>first_name</code> equals &quot;Rijk&quot;</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">first_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">_eq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Rijk</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Retrieve all items in one of the following categories: &quot;vegetables&quot;, &quot;fruit&quot;</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">categories</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">_in</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vegetables</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">fruit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Retrieve all items that are published between two dates</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">date_published</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">_between</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021-01-24</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2021-02-23</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Retrieve all items where the author&#39;s &quot;vip&quot; flag is true</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">author</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">vip</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">_eq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Nested Filters</p><p>The above example will filter the <em>top level</em> items based on a condition <em>in</em> the related item. If you&#39;re looking to filter the related items themselves, take a look at <a href="#deep">the <code>deep</code> parameter</a>!</p></div><h3 id="rest-api-1" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-1" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?filter[first_name][_eq]=Rijk</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// or</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?filter={ &quot;first_name&quot;: { &quot;_eq&quot;: &quot;Rijk&quot; }}</span></span></code></pre></div><h3 id="graphql-1" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-1" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	users(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">first_name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">_eq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Rijk</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> } }) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><div class="tip custom-block"><p class="custom-block-title">Filtering M2A fields</p><p>Because attribute names in GraphQL cannot contain the <code>:</code> character, you will need to replace it with a double underscore. For example, instead of using <code>sections.item:heading</code> in your filter, you will need to use <code>sections.item__heading</code> (see the full example below).</p><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    articles(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C3E88D;">sections</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C3E88D;">item__headings</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> {</span><span style="color:#89DDFF;font-style:italic;">  </span><span style="color:#676E95;font-style:italic;"># Instead of: item:headings</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> {</span></span>
<span class="line"><span style="color:#A6ACCD;">                    </span><span style="color:#C3E88D;">_eq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Section 1</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">                }</span></span>
<span class="line"><span style="color:#A6ACCD;">            }</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }): </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        id</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div></div><h2 id="search" tabindex="-1">Search <a class="header-anchor" href="#search" aria-label="Permalink to &quot;Search&quot;">​</a></h2><p>The search parameter allows you to perform a search on all string and text type fields within a collection. It&#39;s an easy way to search for an item without creating complex field filters – though it is far less optimized. It only searches the root item&#39;s fields, related item fields are not included.</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>Find all items that mention Directus<br><code>Directus</code></p><h3 id="rest-api-2" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-2" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?search=Directus</span></span></code></pre></div><h3 id="graphql-2" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-2" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles(</span><span style="color:#A6ACCD;font-style:italic;">search</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Directus</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="sort" tabindex="-1">Sort <a class="header-anchor" href="#sort" aria-label="Permalink to &quot;Sort&quot;">​</a></h2><p>What field(s) to sort by. Sorting defaults to ascending, but a minus sign (<code>-</code>) can be used to reverse this to descending order. Fields are prioritized by the order in the parameter. The dot-notation has to be used when sorting with values of nested fields.</p><h3 id="examples-2" tabindex="-1">Examples <a class="header-anchor" href="#examples-2" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Sort by creation date descending<br><code>-date_created</code></p><p>Sort by a &quot;sort&quot; field, followed by publish date descending<br><code>sort, -publish_date</code></p><p>Sort by a &quot;sort&quot; field, followed by a nested author&#39;s name<br><code>sort, -author.name</code></p><h3 id="rest-api-3" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-3" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?sort=sort,-date_created,author.name</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// or</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?sort[]=sort</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;sort[]=-date_created</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;sort[]=-author.name</span></span></code></pre></div><h3 id="graphql-3" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-3" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles(</span><span style="color:#A6ACCD;font-style:italic;">sort</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#676E95;font-style:italic;">sort&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-date_created</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author.name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="limit" tabindex="-1">Limit <a class="header-anchor" href="#limit" aria-label="Permalink to &quot;Limit&quot;">​</a></h2><p>Set the maximum number of items that will be returned. The default limit is set to <code>100</code>.</p><h3 id="examples-3" tabindex="-1">Examples <a class="header-anchor" href="#examples-3" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Get the first 200 items<br><code>200</code></p><p>Get all items<br><code>-1</code></p><div class="warning custom-block"><p class="custom-block-title">All Items</p><p>Depending on the size of your collection, fetching unlimited data may result in degraded performance or timeouts, use with caution.</p></div><h3 id="rest-api-4" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-4" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?limit=200</span></span></code></pre></div><h3 id="graphql-4" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-4" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles(</span><span style="color:#A6ACCD;font-style:italic;">limit</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="offset" tabindex="-1">Offset <a class="header-anchor" href="#offset" aria-label="Permalink to &quot;Offset&quot;">​</a></h2><p>Skip the first <code>n</code> items in the response. Can be used for pagination.</p><h3 id="examples-4" tabindex="-1">Examples <a class="header-anchor" href="#examples-4" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Get items 101—200<br><code>100</code></p><h3 id="rest-api-5" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-5" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?offset=100</span></span></code></pre></div><h3 id="graphql-5" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-5" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles(</span><span style="color:#A6ACCD;font-style:italic;">offset</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="page" tabindex="-1">Page <a class="header-anchor" href="#page" aria-label="Permalink to &quot;Page&quot;">​</a></h2><p>An alternative to <code>offset</code>. Page is a way to set <code>offset</code> under the hood by calculating <code>limit * page</code>. Page is 1-indexed.</p><h3 id="examples-5" tabindex="-1">Examples <a class="header-anchor" href="#examples-5" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Get items 1-100<br><code>1</code></p><p>Get items 101-200<br><code>2</code></p><h3 id="rest-api-6" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-6" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?page=2</span></span></code></pre></div><h3 id="graphql-6" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-6" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles(</span><span style="color:#A6ACCD;font-style:italic;">page</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="aggregation-grouping" tabindex="-1">Aggregation &amp; Grouping <a class="header-anchor" href="#aggregation-grouping" aria-label="Permalink to &quot;Aggregation &amp; Grouping&quot;">​</a></h2><p>Aggregate functions allow you to perform calculations on a set of values, returning a single result.</p><p>The following aggregation functions are available in Directus:</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>count</code></td><td>Counts how many items there are</td></tr><tr><td><code>countDistinct</code></td><td>Counts how many unique items there are</td></tr><tr><td><code>sum</code></td><td>Adds together the values in the given field</td></tr><tr><td><code>sumDistinct</code></td><td>Adds together the unique values in the given field</td></tr><tr><td><code>avg</code></td><td>Get the average value of the given field</td></tr><tr><td><code>avgDistinct</code></td><td>Get the average value of the unique values in the given field</td></tr><tr><td><code>min</code></td><td>Return the lowest value in the field</td></tr><tr><td><code>max</code></td><td>Return the highest value in the field</td></tr><tr><td><code>countAll</code></td><td>Equivalent to <code>?aggregate[count]=*</code> (GraphQL only)</td></tr></tbody></table><h3 id="grouping" tabindex="-1">Grouping <a class="header-anchor" href="#grouping" aria-label="Permalink to &quot;Grouping&quot;">​</a></h3><p>By default, the above aggregation functions run on the whole dataset. To allow for more flexible reporting, you can combine the above aggregation with grouping. Grouping allows for running the aggregation functions based on a shared value. This allows for things like <em>&quot;Average rating per month&quot;</em> or <em>&quot;Total sales of items in the jeans category&quot;</em>.</p><p>The <code>groupBy</code> query allows for grouping on multiple fields simultaneously. Combined with the <a href="#functions">Functions</a>, this allows for aggregate reporting per year-month-date.</p><h3 id="rest-api-7" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-7" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?aggregate[avg]=cost</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;groupBy[]=author</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;groupBy[]=year(publish_date)</span></span></code></pre></div><h3 id="graphql-7" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-7" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles_aggregated(</span><span style="color:#A6ACCD;font-style:italic;">groupBy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;font-style:italic;">&quot;</span><span style="color:#676E95;font-style:italic;">author&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">year(publish_date)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		group</span></span>
<span class="line"><span style="color:#A6ACCD;">		sum </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			revenue</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="deep" tabindex="-1">Deep <a class="header-anchor" href="#deep" aria-label="Permalink to &quot;Deep&quot;">​</a></h2><p>Deep allows you to set any of the other query parameters on a nested relational dataset.</p><h3 id="examples-6" tabindex="-1">Examples <a class="header-anchor" href="#examples-6" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><p>Limit the nested related articles to 3</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">related_articles</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">_limit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Only get 3 related articles, with only the top rated comment nested</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">related_articles</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">_limit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">comments</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">_sort</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rating</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">_limit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="rest-api-8" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-8" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?deep[translations][_filter][languages_code][_eq]=en-US</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// or</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?deep={ &quot;translations&quot;: { &quot;_filter&quot;: { &quot;languages_code&quot;: { &quot;_eq&quot;: &quot;en-US&quot; }}}}</span></span></code></pre></div><h3 id="graphql-8" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-8" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><p><em>Natively supported in GraphQL:</em></p><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	members </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		favorite_games(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">_eq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mariokart 8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> } }) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			id</span></span>
<span class="line"><span style="color:#A6ACCD;">			featured_image </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				filename_disk</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="aliases" tabindex="-1">Aliases <a class="header-anchor" href="#aliases" aria-label="Permalink to &quot;Aliases&quot;">​</a></h2><p>Aliases allow you rename fields on the fly, and request the same nested data set multiple times using different filters.</p><div class="warning custom-block"><p class="custom-block-title">Nested fields</p><p>It is only possible to alias same level fields.<br> Alias for nested fields, f.e. <code>field.nested</code>, will not work.</p></div><h3 id="rest-api-9" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-9" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?alias[all_translations]=translations</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;alias[dutch_translations]=translations</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;deep[dutch_translations][_filter][code][_eq]=nl-NL</span></span></code></pre></div><h3 id="graphql-9" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-9" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><p><em>Natively supported in GraphQL:</em></p><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C3E88D;">dutch_translations</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> translations(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">code</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">_eq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">nl-NL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> } }) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			id</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#C3E88D;">all_translations</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> translations </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			id</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="export" tabindex="-1">Export <a class="header-anchor" href="#export" aria-label="Permalink to &quot;Export&quot;">​</a></h2><p>Save the current API response to a file.</p><p>Saves the API response to a file. Accepts one of <code>csv</code>, <code>json</code>, <code>xml</code>, <code>yaml</code>.</p><h3 id="rest-api-10" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-10" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?export=csv</span></span>
<span class="line"><span style="color:#A6ACCD;">?export=json</span></span>
<span class="line"><span style="color:#A6ACCD;">?export=xml</span></span>
<span class="line"><span style="color:#A6ACCD;">?export=yaml</span></span></code></pre></div><h3 id="graphql-10" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-10" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><p>n/a</p><hr><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><p>Functions allow for &quot;live&quot; modification of values stored in a field. Functions can be used in any query parameter you&#39;d normally supply a field key, including fields, aggregation, and filter.</p><p>Functions can be used by wrapping the field key in a JavaScript like syntax, for example:</p><p><code>timestamp</code> -&gt; <code>year(timestamp)</code></p><h3 id="datetime-functions" tabindex="-1">DateTime Functions <a class="header-anchor" href="#datetime-functions" aria-label="Permalink to &quot;DateTime Functions&quot;">​</a></h3><table><thead><tr><th>Filter</th><th>Description</th></tr></thead><tbody><tr><td><code>year</code></td><td>Extract the year from a datetime/date/timestamp field</td></tr><tr><td><code>month</code></td><td>Extract the month from a datetime/date/timestamp field</td></tr><tr><td><code>week</code></td><td>Extract the week from a datetime/date/timestamp field</td></tr><tr><td><code>day</code></td><td>Extract the day from a datetime/date/timestamp field</td></tr><tr><td><code>weekday</code></td><td>Extract the weekday from a datetime/date/timestamp field</td></tr><tr><td><code>hour</code></td><td>Extract the hour from a datetime/date/timestamp field</td></tr><tr><td><code>minute</code></td><td>Extract the minute from a datetime/date/timestamp field</td></tr><tr><td><code>second</code></td><td>Extract the second from a datetime/date/timestamp field</td></tr></tbody></table><h3 id="array-functions" tabindex="-1">Array Functions <a class="header-anchor" href="#array-functions" aria-label="Permalink to &quot;Array Functions&quot;">​</a></h3><table><thead><tr><th>Filter</th><th>Description</th></tr></thead><tbody><tr><td><code>count</code></td><td>Extract the number of items from a JSON array or relational field</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">GraphQL</p><p>Names aren&#39;t allowed to include any special characters in GraphQL, preventing the <code>()</code> syntax from being used.</p><p>As an alternative, the above functions can be used by appending <code>_func</code> at the end of the field name, and using the function name as the nested field (see the example that follows).</p></div><h3 id="rest-api-11" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-11" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?fields=id,title,weekday(date_published)</span></span>
<span class="line"><span style="color:#A6ACCD;">&amp;filter[year(date_published)][_eq]=2021</span></span></code></pre></div><h3 id="graphql-11" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-11" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles(</span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">date_published_func</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">year</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> { </span><span style="color:#C3E88D;">_eq</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2021</span><span style="color:#A6ACCD;"> } } }) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		id</span></span>
<span class="line"><span style="color:#A6ACCD;">		title</span></span>
<span class="line"><span style="color:#A6ACCD;">		date_published_func </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			weekday</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h2 id="metadata" tabindex="-1">Metadata <a class="header-anchor" href="#metadata" aria-label="Permalink to &quot;Metadata&quot;">​</a></h2><p>Metadata allows you to retrieve some additional information about the items in the collection you&#39;re fetching. <code>*</code> can be used as a wildcard to retrieve all metadata.</p><h3 id="total-count" tabindex="-1">Total Count <a class="header-anchor" href="#total-count" aria-label="Permalink to &quot;Total Count&quot;">​</a></h3><p>Returns the total item count of the collection you&#39;re querying.</p><h3 id="filter-count" tabindex="-1">Filter Count <a class="header-anchor" href="#filter-count" aria-label="Permalink to &quot;Filter Count&quot;">​</a></h3><p>Returns the item count of the collection you&#39;re querying, taking the current filter/search parameters into account.</p><div class="warning custom-block"><p class="custom-block-title">GraphQL</p><p>GraphQL does not have meta fields like the REST API.<br> As an alternative, you can retrieve the count using Aggregation.</p><p>For more details, see: <a href="#aggregation-grouping">Aggregation &amp; Grouping</a></p></div><h3 id="rest-api-12" tabindex="-1">REST API <a class="header-anchor" href="#rest-api-12" aria-label="Permalink to &quot;REST API&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">?meta=total_count</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?meta=filter_count</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?meta=*</span></span></code></pre></div><h3 id="graphql-12" tabindex="-1">GraphQL <a class="header-anchor" href="#graphql-12" aria-label="Permalink to &quot;GraphQL&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">query {</span></span>
<span class="line"><span style="color:#A6ACCD;">	articles_aggregated {</span></span>
<span class="line"><span style="color:#A6ACCD;">		count {</span></span>
<span class="line"><span style="color:#A6ACCD;">			id</span></span>
<span class="line"><span style="color:#A6ACCD;">		}</span></span>
<span class="line"><span style="color:#A6ACCD;">	}</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div>`,158),o=[t];function p(r,c,i,d,h,y){return e(),s("div",null,o)}const C=a(l,[["render",p]]);export{u as __pageData,C as default};
