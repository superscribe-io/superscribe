import{_ as s,c as e,o,R as n}from"./chunks/framework.70e71619.js";const A=JSON.parse('{"title":"Custom API Hooks","description":"A guide on how to build custom hooks in Directus.","frontmatter":{"description":"A guide on how to build custom hooks in Directus.","readTime":"7 min read"},"headers":[],"relativePath":"extensions/hooks.md","lastUpdated":1682552691000}'),a={name:"extensions/hooks.md"},l=n(`<h1 id="custom-api-hooks" tabindex="-1">Custom API Hooks <small></small> <a class="header-anchor" href="#custom-api-hooks" aria-label="Permalink to &quot;Custom API Hooks &lt;small&gt;&lt;/small&gt;&quot;">​</a></h1><blockquote><p>Custom API Hooks allow running custom logic when a specified event occurs within your project. There are different types of events to choose from.</p></blockquote><h2 id="extension-entrypoint" tabindex="-1">Extension Entrypoint <a class="header-anchor" href="#extension-entrypoint" aria-label="Permalink to &quot;Extension Entrypoint&quot;">​</a></h2><p>The entrypoint of your hook is the <code>index</code> file inside the <code>src/</code> folder of your extension package. It exports a register function to register one or more event listeners.</p><p>Example of an entrypoint:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">action</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">items.create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Creating Item!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">action</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">items.create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Item created!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h2><p>Your hook can trigger on a variety of different events. An event is defined by its type and its name.</p><p>There are five event types to choose from:</p><ul><li><a href="#filter">Filter</a></li><li><a href="#action">Action</a></li><li><a href="#init">Init</a></li><li><a href="#schedule">Schedule</a></li><li><a href="#embed">Embed</a></li></ul><p>Use filter hooks when you want the hook to fire before the event. Use action hooks when you want the hook to fire after the event.</p><h3 id="filter" tabindex="-1">Filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;Filter&quot;">​</a></h3><p>Filter hooks act on the event&#39;s payload before the event is fired. They allow you to check, modify, or cancel an event.</p><p>Below is an example of canceling a <code>create</code> event by throwing a standard Directus exception.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">exceptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">InvalidPayloadException</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">exceptions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">items.create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">input</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">LOGIC_TO_CANCEL_EVENT</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">InvalidPayloadException</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">WHAT_IS_WRONG</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><p>The filter register function receives two parameters:</p><ul><li>The event name</li><li>A callback function that is executed whenever the event fires.</li></ul><p>The callback function itself receives three parameters:</p><ul><li>The modifiable payload</li><li>An event-specific meta object</li><li>A context object</li></ul><p>The context object has the following properties:</p><ul><li><code>database</code> — The current database transaction</li><li><code>schema</code> — The current API schema in use</li><li><code>accountability</code> — Information about the current user</li></ul><div class="warning custom-block"><p class="custom-block-title">Performance</p><p>Filters can impact performance when not carefully implemented, as they are executed in a blocking manner. This applies in particular to filters firing on <code>read</code> events, where a single request can result in a large amount of database reads.</p></div><h3 id="action" tabindex="-1">Action <a class="header-anchor" href="#action" aria-label="Permalink to &quot;Action&quot;">​</a></h3><p>Action hooks execute after a defined event and receive data related to the event. Use action hooks when you need to automate responses to CRUD events on items or server actions.</p><p>The action register function receives two parameters:</p><ul><li>The event name</li><li>A callback function that is executed whenever the event fires.</li></ul><p>The callback function itself receives two parameters:</p><ul><li>An event-specific meta object</li><li>A context object</li></ul><p>The context object has the following properties:</p><ul><li><code>database</code> — The current database transaction</li><li><code>schema</code> — The current API schema in use</li><li><code>accountability</code> — Information about the current user</li></ul><h3 id="init" tabindex="-1">Init <a class="header-anchor" href="#init" aria-label="Permalink to &quot;Init&quot;">​</a></h3><p>Init hooks execute at a defined point within the life cycle of Directus. Use init hook objects to inject logic into internal services.</p><p>The init register function receives two parameters:</p><ul><li>The event name</li><li>A callback function that is executed whenever the event fires.</li></ul><p>The callback function itself receives one parameter:</p><ul><li>An event-specific meta object</li></ul><h3 id="schedule" tabindex="-1">Schedule <a class="header-anchor" href="#schedule" aria-label="Permalink to &quot;Schedule&quot;">​</a></h3><p>Schedule hooks execute at certain points in time rather than when Directus performs a specific action. This is supported through <a href="https://www.npmjs.com/package/node-cron" target="_blank" rel="noreferrer"><code>node-cron</code></a>.</p><p>To set up a scheduled event, provide a cron statement as the first parameter to the <code>schedule()</code> function. For example <code>schedule(&#39;15 14 1 * *&#39;, &lt;...&gt;)</code> (at 14:15 on day-of-month 1) or <code>schedule(&#39;5 4 * * sun&#39;, &lt;...&gt;)</code> (at 04:05 on Sunday).</p><p>Below is an example of registering a schedule hook.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> axios </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">schedule</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">schedule</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">*/15 * * * *</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">http://example.com/webhook</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> message</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Another 15 minutes passed...</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="embed" tabindex="-1">Embed <a class="header-anchor" href="#embed" aria-label="Permalink to &quot;Embed&quot;">​</a></h3><p>Inject custom JavaScript or CSS into the <code>&lt;head&gt;</code> and <code>&lt;body&gt;</code> tags within the Data Studio.</p><p>The embed register function receives two parameters:</p><ul><li>The position to embed, either <code>head</code> or <code>body</code>.</li><li>The value to embed, either a string or a function that returns a string.</li></ul><p>Below is an example of registering embed hooks.</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">embed</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">env</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// Google Tag Manager Example</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">embed</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">head</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;!-- Google Tag Manager --&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">		&lt;script&gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({&#39;gtm.start&#39;:new Date().getTime(),event:&#39;gtm.js&#39;});var f=d.getElementsByTagName(s)[0],j=d.createElement(s),dl=l!=&#39;dataLayer&#39;?&#39;&amp;l=&#39;+l:&#39;&#39;;j.async=true;j.src=&#39;https://www.googletagmanager.com/gtm.js?id=&#39;+i+dl;f.parentNode.insertBefore(j,f);})(window,document,&#39;script&#39;,&#39;dataLayer&#39;,&#39;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GTM_ID</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&#39;);&lt;/script&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">		&lt;!-- End Google Tag Manager --&gt;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">	)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// Sentry Example</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">embed</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">head</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;script src=&quot;https://browser.sentry-cdn.com/7.21.1/bundle.min.js&quot; integrity=&quot;sha384-xOL2QebDu7YNMtC6jW2i5RpQ5RcWOyQMTwrWBiEDezpjjXM7mXhYGz3vze77V91Q&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">	)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">embed</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">body</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">&lt;script&gt;</span></span>
<span class="line"><span style="color:#C3E88D;">		Sentry.init({</span></span>
<span class="line"><span style="color:#C3E88D;">			dsn: &quot;</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SENTRY_DSN</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&quot; // &quot;https://examplePublicKey@o0.ingest.sentry.io/0&quot;,</span></span>
<span class="line"><span style="color:#C3E88D;">			release: &quot;my-project-name@</span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">npm_package_version</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">&quot;,</span></span>
<span class="line"><span style="color:#C3E88D;">			integrations: [new Sentry.BrowserTracing()],</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">			// We recommend adjusting this value in production, or using tracesSampler</span></span>
<span class="line"><span style="color:#C3E88D;">			// for finer control</span></span>
<span class="line"><span style="color:#C3E88D;">			tracesSampleRate: 1.0,</span></span>
<span class="line"><span style="color:#C3E88D;">		});</span></span>
<span class="line"><span style="color:#C3E88D;">		&lt;/script&gt;</span><span style="color:#89DDFF;">\`</span></span>
<span class="line"><span style="color:#F07178;">	)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h2 id="available-events" tabindex="-1">Available Events <a class="header-anchor" href="#available-events" aria-label="Permalink to &quot;Available Events&quot;">​</a></h2><h3 id="filter-events" tabindex="-1">Filter Events <a class="header-anchor" href="#filter-events" aria-label="Permalink to &quot;Filter Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Payload</th><th>Meta</th></tr></thead><tbody><tr><td><code>request.not_found</code></td><td><code>false</code></td><td><code>request</code>, <code>response</code></td></tr><tr><td><code>request.error</code></td><td>The request errors</td><td>--</td></tr><tr><td><code>database.error</code></td><td>The database error</td><td><code>client</code></td></tr><tr><td><code>auth.login</code></td><td>The login payload</td><td><code>status</code>, <code>user</code>, <code>provider</code></td></tr><tr><td><code>auth.jwt</code></td><td>The auth token</td><td><code>status</code>, <code>user</code>, <code>provider</code>, <code>type</code></td></tr><tr><td><code>authenticate</code></td><td>The empty accountability object</td><td><code>req</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.query</code></td><td>The items query</td><td><code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.read</code></td><td>The read item</td><td><code>query</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.create</code></td><td>The new item</td><td><code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.update</code></td><td>The updated item</td><td><code>keys</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.delete</code></td><td>The keys of the item</td><td><code>collection</code></td></tr><tr><td><code>&lt;system-collection&gt;.create</code></td><td>The new item</td><td><code>collection</code></td></tr><tr><td><code>&lt;system-collection&gt;.update</code></td><td>The updated item</td><td><code>keys</code>, <code>collection</code></td></tr><tr><td><code>&lt;system-collection&gt;.delete</code></td><td>The keys of the item</td><td><code>collection</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">System Collections</p><p><code>&lt;system-collection&gt;</code> should be replaced with one of the system collection names <code>activity</code>, <code>collections</code>, <code>dashboards</code>, <code>fields</code>, <code>files</code> (except create/update), <code>flows</code>, <code>folders</code>, <code>notifications</code>, <code>operations</code>, <code>panels</code>, <code>permissions</code>, <code>presets</code>, <code>relations</code>, <code>revisions</code>, <code>roles</code>, <code>settings</code>, <code>shares</code>, <code>users</code> or <code>webhooks</code>.</p></div><h3 id="action-events" tabindex="-1">Action Events <a class="header-anchor" href="#action-events" aria-label="Permalink to &quot;Action Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Meta</th></tr></thead><tbody><tr><td><code>server.start</code></td><td><code>server</code></td></tr><tr><td><code>server.stop</code></td><td><code>server</code></td></tr><tr><td><code>response</code></td><td><code>request</code>, <code>response</code>, <code>ip</code>, <code>duration</code>, <code>finished</code></td></tr><tr><td><code>auth.login</code></td><td><code>payload</code>, <code>status</code>, <code>user</code>, <code>provider</code></td></tr><tr><td><code>files.upload</code></td><td><code>payload</code>, <code>key</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.read</code></td><td><code>payload</code>, <code>query</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.create</code></td><td><code>payload</code>, <code>key</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.update</code></td><td><code>payload</code>, <code>keys</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.delete</code></td><td><code>keys</code>, <code>collection</code></td></tr><tr><td><code>(&lt;collection&gt;.)items.sort</code></td><td><code>collection</code>, <code>item</code>, <code>to</code></td></tr><tr><td><code>&lt;system-collection&gt;.create</code></td><td><code>payload</code>, <code>key</code>, <code>collection</code></td></tr><tr><td><code>&lt;system-collection&gt;.update</code></td><td><code>payload</code>, <code>keys</code>, <code>collection</code></td></tr><tr><td><code>&lt;system-collection&gt;.delete</code></td><td><code>keys</code>, <code>collection</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">System Collections</p><p><code>&lt;system-collection&gt;</code> should be replaced with one of the system collection names <code>activity</code>, <code>collections</code>, <code>dashboards</code>, <code>fields</code>, <code>files</code> (except create/update), <code>flows</code>, <code>folders</code>, <code>notifications</code>, <code>operations</code>, <code>panels</code>, <code>permissions</code>, <code>presets</code>, <code>relations</code>, <code>revisions</code>, <code>roles</code>, <code>settings</code>, <code>shares</code>, <code>users</code> or <code>webhooks</code>.</p></div><h3 id="init-events" tabindex="-1">Init Events <a class="header-anchor" href="#init-events" aria-label="Permalink to &quot;Init Events&quot;">​</a></h3><table><thead><tr><th>Name</th><th>Meta</th></tr></thead><tbody><tr><td><code>cli.before</code></td><td><code>program</code></td></tr><tr><td><code>cli.after</code></td><td><code>program</code></td></tr><tr><td><code>app.before</code></td><td><code>app</code></td></tr><tr><td><code>app.after</code></td><td><code>app</code></td></tr><tr><td><code>routes.before</code></td><td><code>app</code></td></tr><tr><td><code>routes.after</code></td><td><code>app</code></td></tr><tr><td><code>routes.custom.before</code></td><td><code>app</code></td></tr><tr><td><code>routes.custom.after</code></td><td><code>app</code></td></tr><tr><td><code>middlewares.before</code></td><td><code>app</code></td></tr><tr><td><code>middlewares.after</code></td><td><code>app</code></td></tr></tbody></table><h2 id="register-function" tabindex="-1">Register Function <a class="header-anchor" href="#register-function" aria-label="Permalink to &quot;Register Function&quot;">​</a></h2><p>The register function receives an object containing the type-specific register functions as the first parameter:</p><ul><li><code>filter</code> — Listen for a filter event</li><li><code>action</code> — Listen for an action event</li><li><code>init</code> — Listen for an init event</li><li><code>schedule</code> — Execute a function at certain points in time</li><li><code>embed</code> — Inject custom JavaScript or CSS within the Data Studio</li></ul><p>The second parameter is a context object with the following properties:</p><ul><li><code>services</code> — All API internal services</li><li><code>exceptions</code> — API exception objects that can be used for throwing &quot;proper&quot; errors</li><li><code>database</code> — Knex instance that is connected to the current database</li><li><code>getSchema</code> — Async function that reads the full available schema for use in services</li><li><code>env</code> — Parsed environment variables</li><li><code>logger</code> — <a href="https://github.com/pinojs/pino" target="_blank" rel="noreferrer">Pino</a> instance.</li><li><code>emitter</code> — <a href="https://github.com/directus/directus/blob/main/api/src/emitter.ts" target="_blank" rel="noreferrer">Event emitter</a> instance that can be used to trigger custom events for other extensions.</li></ul><div class="warning custom-block"><p class="custom-block-title">Event loop</p><p>When implementing custom events using the emitter make sure you never directly or indirectly emit the same event your hook is currently handling as that would result in an infinite loop!</p></div><h2 id="examples" tabindex="-1">Examples: <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples:&quot;">​</a></h2><h3 id="sync-with-external" tabindex="-1">Sync with External <a class="header-anchor" href="#sync-with-external" aria-label="Permalink to &quot;Sync with External&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> axios </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">axios</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">filter</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">services</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">exceptions</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">MailService</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">services</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ServiceUnavailableException</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">ForbiddenException</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">exceptions</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">// Sync with external recipes service, cancel creation on failure</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#82AAFF;">filter</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">items.create</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">async</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">input</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">collection</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">schema</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">database</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">})</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">collection</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">recipes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mailService</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">MailService</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">schema</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> knex</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">database</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">axios</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">post</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://example.com/recipes</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">input</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">mailService</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">				to</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">person@example.com</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">				template</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">					name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">item-created</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">					data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">						collection</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">collection</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">					</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">				</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">error</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">			</span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ServiceUnavailableException</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">error</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">syncedWithExample</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">input</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><h3 id="add-sentry-monitoring" tabindex="-1">Add Sentry monitoring <a class="header-anchor" href="#add-sentry-monitoring" aria-label="Permalink to &quot;Add Sentry monitoring&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineHook</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@directus/extensions-sdk</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> Sentry </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@sentry/node</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@sentry/tracing</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineHook</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">init</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">env</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SENTRY_DSN</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">Sentry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">init</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        dsn</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">SENTRY_DSN</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">init</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">routes.before</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">({</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">})</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Sentry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Handlers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestHandler</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-- Sentry Request Handler Added --</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">init</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">routes.custom.after</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">({</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;font-style:italic;">app</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">})</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">app</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">use</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">Sentry</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Handlers</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">errorHandler</span><span style="color:#F07178;">())</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">-- Sentry Error Handler Added --</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,67),t=[l];function p(c,r,i,y,d,F){return o(),e("div",null,t)}const C=s(a,[["render",p]]);export{A as __pageData,C as default};
