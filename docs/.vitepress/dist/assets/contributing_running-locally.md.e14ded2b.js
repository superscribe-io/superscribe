import{_ as e,c as a,o as s,R as o}from"./chunks/framework.70e71619.js";const C=JSON.parse(`{"title":"Running Locally","description":"This guide explains how to install the _Development_ version of Directus locally so that you can work on the platform's source code.","frontmatter":{"description":"This guide explains how to install the _Development_ version of Directus locally so that you can work on the platform's source code.","readTime":"4 min read"},"headers":[],"relativePath":"contributing/running-locally.md","lastUpdated":1682552691000}`),t={name:"contributing/running-locally.md"},n=o(`<h1 id="running-locally" tabindex="-1">Running Locally <a class="header-anchor" href="#running-locally" aria-label="Permalink to &quot;Running Locally&quot;">​</a></h1><blockquote><p>This guide explains how to install the <em>Development</em> version of Directus locally so that you can work on the platform&#39;s source code. To install the <em>Production</em> version locally, please follow to our <a href="/self-hosted/docker-guide.html">Docker Guide</a>.</p></blockquote><div class="tip custom-block"><p class="custom-block-title">Minimum Requirements</p><p>You will need to have <a href="https://nodejs.org/en/download/current" target="_blank" rel="noreferrer">the latest version of Node</a> to <em>build</em> a Development version of Directus.</p><p>You will also need to have the package manager <a href="https://pnpm.io" target="_blank" rel="noreferrer">pnpm</a> installed.</p></div><h2 id="_1-fork-the-directus-repository" tabindex="-1">1. Fork the Directus repository <a class="header-anchor" href="#_1-fork-the-directus-repository" aria-label="Permalink to &quot;1. Fork the Directus repository&quot;">​</a></h2><p>Go to the <a href="https://github.com/directus/directus" target="_blank" rel="noreferrer">repository</a> and fork it to your GitHub account. A fork is your copy of the Directus repository which allows you to freely experiment with changes without affecting the original project.</p><h2 id="_2-clone-from-your-repository" tabindex="-1">2. Clone from your repository <a class="header-anchor" href="#_2-clone-from-your-repository" aria-label="Permalink to &quot;2. Clone from your repository&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git@github.com:YOUR-USERNAME/directus.git</span></span></code></pre></div><h2 id="_3-make-a-new-branch" tabindex="-1">3. Make a new branch <a class="header-anchor" href="#_3-make-a-new-branch" aria-label="Permalink to &quot;3. Make a new branch&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">YOUR-BRANCH-NAME</span></span></code></pre></div><h2 id="_4-install-the-dependencies-and-build-the-project" tabindex="-1">4. Install the dependencies and build the project <a class="header-anchor" href="#_4-install-the-dependencies-and-build-the-project" aria-label="Permalink to &quot;4. Install the dependencies and build the project&quot;">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span></code></pre></div><h2 id="_5-create-a-env-file" tabindex="-1">5. Create a <code>.env</code> file <a class="header-anchor" href="#_5-create-a-env-file" aria-label="Permalink to &quot;5. Create a \`.env\` file&quot;">​</a></h2><p>Create an <code>.env</code> file under the <code>api</code> folder using vars from the online <a href="https://docs.directus.io/self-hosted/config-options" target="_blank" rel="noreferrer">config help</a>.</p><div class="tip custom-block"><p class="custom-block-title">Config Values</p><p>The <code>KEY</code>&amp; <code>SECRET</code> config options from <a href="https://docs.directus.io/self-hosted/config-options.html#security" target="_blank" rel="noreferrer">Security</a> are mandatory.</p><p>Also the <a href="https://docs.directus.io/self-hosted/config-options.html#database" target="_blank" rel="noreferrer">Database Configuration</a> must be specified. You might want to use the <a href="https://github.com/directus/directus/blob/main/docker-compose.yml" target="_blank" rel="noreferrer">docker-compose.yml</a> file to spin up a test database.</p></div><h2 id="_6-initialize-the-database" tabindex="-1">6. Initialize the database <a class="header-anchor" href="#_6-initialize-the-database" aria-label="Permalink to &quot;6. Initialize the database&quot;">​</a></h2><p>For this step, you&#39;ll need to already have a SQL database up-and-running, except if you&#39;re using the SQLite driver, which will create the database (file) for you.</p><div class="tip custom-block"><p class="custom-block-title">Admin Account</p><p>Adding the <code>ADMIN_EMAIL</code> &amp; <code>ADMIN_PASSWORD</code> to the <code>.env</code> file before running the <code>bootstrap</code> command, will populate the admin user with the provided credentials instead of random values.</p></div><p>To start the initialization run the following command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">cli</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bootstrap</span></span></code></pre></div><p>This will set-up the required tables for Directus and make sure all the migrations have run.</p><h2 id="_7-start-the-development-server" tabindex="-1">7. Start the development server <a class="header-anchor" href="#_7-start-the-development-server" aria-label="Permalink to &quot;7. Start the development server&quot;">​</a></h2><p>You can run all packages in development with the following command:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--recursive</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Race Conditions</p><p>When running multiple or all packages, sometimes <code>ts-node</code> may not start up the API properly because of race conditions due to changes happening to other packages. You can either rerun the command to restart the API or opt to choose what packages to work on as described below.</p></div><p>If you wish to choose what packages to work on, you should run the <code>dev</code> script for that package. You can see their names and list of scripts in their related <code>package.json</code>.</p><p>Example of running the API only:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><p>If you want to work on multiple packages at once, you should create a new instance of your terminal for each package. Example of running both the API and App at the same time:</p><table><tr><th> Terminal 1 [Api] </th><th> Terminal 2 [App] </th></tr><tr><td><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">api</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div></td><td><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--filter</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">app</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div></td></tr></table><hr><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you encounter errors during this installation process, make sure your node version meets the minimum requirements</p></div><h2 id="_8-make-your-fixes-changes" tabindex="-1">8. Make your fixes/changes <a class="header-anchor" href="#_8-make-your-fixes-changes" aria-label="Permalink to &quot;8. Make your fixes/changes&quot;">​</a></h2><p>At this point you are ready to start working on Directus! Before diving in however, it&#39;s worth reading through the introduction to <a href="/contributing/introduction.html">Contributing</a>.</p><div class="tip custom-block"><p class="custom-block-title">Debugging</p><p>Check our Wiki for a <a href="https://github.com/directus/directus/wiki/debugging" target="_blank" rel="noreferrer">guide</a> on debugging the app and API.</p></div><h2 id="_9-running-tests" tabindex="-1">9. Running tests <a class="header-anchor" href="#_9-running-tests" aria-label="Permalink to &quot;9. Running tests&quot;">​</a></h2><p>Tests run automatically through GitHub Actions. However you may wish to run the tests locally especially when you write tests yourself.</p><p>Install <a href="https://docs.docker.com/get-docker" target="_blank" rel="noreferrer">Docker</a> and ensure that the service is running.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Ensure that you are testing on the lastest codebase</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Run the unit tests</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Clean up in case you ran the blackbox tests before</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tests/blackbox/docker-compose.yml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">down</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-v</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Start the necessary containers for the blackbox tests</span></span>
<span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">compose</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tests/blackbox/docker-compose.yml</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">up</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--wait</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Run the blackbox tests</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test:blackbox</span></span></code></pre></div>`,38),l=[n];function r(p,c,i,h,d,u){return s(),a("div",null,l)}const m=e(t,[["render",r]]);export{C as __pageData,m as default};
