import{_ as o,c as l,z as e,t as s,a,R as n,o as i}from"./chunks/framework.70e71619.js";const w=JSON.parse('{"title":"Schedule Future Content for Static Sites","description":"This recipe explains how to schedule content to be published for a future date for a statically generated site.","frontmatter":{"description":"This recipe explains how to schedule content to be published for a future date for a statically generated site.","tags":[],"skill_level":null,"directus_version":"9.21.2","author_override":null,"author":"Bryant Gillespie"},"headers":[],"relativePath":"guides/headless-cms/schedule-content/static-sites.md","lastUpdated":1682552691000}'),r={name:"guides/headless-cms/schedule-content/static-sites.md"},c=e("h1",{id:"schedule-future-content-for-static-sites",tabindex:"-1"},[a("Schedule Future Content for Static Sites "),e("a",{class:"header-anchor",href:"#schedule-future-content-for-static-sites","aria-label":'Permalink to "Schedule Future Content for Static Sites"'},"​")],-1),p={class:"tip custom-block"},d={class:"custom-block-title"},h=e("strong",null,"Directus Version:",-1),u=n(`<h2 id="explanation" tabindex="-1">Explanation <a class="header-anchor" href="#explanation" aria-label="Permalink to &quot;Explanation&quot;">​</a></h2><p>This recipe explains how to schedule content to be published on a future date for a statically generated site (SSG).</p><p>We&#39;ll be using <a href="/configuration/flows.html">Flows</a> to publish articles when the current date matches the published date.</p><p>First we&#39;ll schedule a flow to run at regular intervals.</p><p>Next we&#39;ll check the timestamps of items with our content collection. And we&#39;ll update those the status of those items whenever the published date is less than or equal the current timestamp.</p><p>Last, we&#39;ll kick off a new deployment of your static site at your hosting provider using one of the recipes below.</p><ul><li><a href="/cookbook/flows/trigger-static-site-build-netlify.html">Triggering a static site build at Netlify</a></li><li><a href="/cookbook/flows/trigger-static-site-build-vercel.html">Triggering a static site build at Vercel</a></li></ul><div class="info custom-block"><p class="custom-block-title">Note</p><p>If your site fetches content at runtime or at the time of a page request, please <a href="/cookbook/flows/scheduling-content-dynamic-sites.html">follow the recipe for dynamic sites</a>.</p></div><h2 id="how-to-guide" tabindex="-1">How-To Guide <a class="header-anchor" href="#how-to-guide" aria-label="Permalink to &quot;How-To Guide&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Requirements</p><p>You’ll need to have already created a collection for your site content like <code>articles</code> or <code>posts</code> or <code>pages</code> with a field <code>status</code> that controls the published state.</p></div><h3 id="add-a-field-to-control-publish-date-and-time" tabindex="-1">Add a Field to Control Publish Date and Time <a class="header-anchor" href="#add-a-field-to-control-publish-date-and-time" aria-label="Permalink to &quot;Add a Field to Control Publish Date and Time&quot;">​</a></h3><ol><li><p>Under Settings, go to Data Model.</p></li><li><p>Choose your content <a href="/configuration/data-model/collections.html">Collection</a>.</p></li><li><p><a href="/configuration/data-model/fields.html#create-a-field-standard">Add a new field</a> to your content Collection.</p><p><img src="https://cdn.directus.io/docs/v9/headless-cms/how-to-packet-20220222A/scheduling-content-publish-date.webp" alt="The interface for creating a new field is shown. The field type Datetime is selected. The Key is named date_published. The field for Use 24-Hour format is checked."></p><p>a. Choose <strong>Datetime</strong> for the Type.</p><p>b. For the Key, use something relevant like <code>date_published</code>.</p><p>c. Save the Field and your Collection.</p></li></ol><h3 id="add-some-content-and-set-a-publish-date" tabindex="-1">Add Some Content and Set a Publish Date <a class="header-anchor" href="#add-some-content-and-set-a-publish-date" aria-label="Permalink to &quot;Add Some Content and Set a Publish Date&quot;">​</a></h3><ol start="4"><li><p><a href="/app/content/items.html">Create or update an Item</a> inside your Collection</p><p><img src="https://cdn.directus.io/docs/v9/headless-cms/how-to-packet-20220222A/scheduling-content-create-content-scheduled.webp" alt="A content item within the Articles collection is shown. The title is &quot;What is Headless CMS?&quot;. English translations are also shown with a Summary field. The Summary reads &quot;A quick overview of what Headless CMS is and how it&#39;s beneficial to your team.&quot;"></p><p>a. Set the <code>status</code> field to <code>scheduled</code></p><p>b. Add a date for the <code>date_published</code> field</p><p>c. Add the content for other fields and save the Item</p></li></ol><h3 id="create-and-configure-your-flow" tabindex="-1">Create and Configure Your Flow <a class="header-anchor" href="#create-and-configure-your-flow" aria-label="Permalink to &quot;Create and Configure Your Flow&quot;">​</a></h3><ol start="5"><li><p><a href="/configuration/flows.html#create-a-flow">Create a new Flow</a></p><p><img src="https://cdn.directus.io/docs/v9/headless-cms/how-to-packet-20220222A/scheduling-content-flow-setup.webp" alt="Under the Creating a New Flow interface, the Flow Setup tab is shown. The name of the new flow is Published Scheduled Articles. The status is Active. The Description field reads &quot;This is triggered every 15 minutes to publish any scheduled articles&quot;. The icon selected is &quot;Fiber New&quot;. For the Color field, a green color with the hex code #2ECDA7 is selected. Track Activity &amp; Logs is selected."></p><p>Give it a memorable name and short description like <code>Publish Scheduled Articles</code>.</p></li><li><p><a href="/configuration/flows/triggers.html#triggers">Complete the Trigger Setup</a></p><p><img src="https://cdn.directus.io/docs/v9/headless-cms/how-to-packet-20220222A/scheduling-content-trigger.webp" alt="Under the Creating New Flow interface, the Trigger Setup tab is shown. The selected trigger is Schedule(CRON). The Interval field has a value of &quot;* 15 * * * *&quot;."></p><p>a. For <strong>Type</strong>, Select <a href="/configuration/flows/triggers.html#schedule-cron">Schedule (CRON)</a>. This will trigger this flow at regular intervals of time.</p><p>b. Add your <strong>Interval</strong> in proper CRON syntax.</p><p><strong>Examples</strong></p><ul><li><code>* 1 * * * *</code> - Would trigger this flow every minute</li><li><code>* 15 * * * *</code> – Would trigger this flow every 15 minutes</li></ul></li></ol><h3 id="add-an-operation-to-check-the-published-date-and-update-data" tabindex="-1">Add an Operation to Check The Published Date and Update Data <a class="header-anchor" href="#add-an-operation-to-check-the-published-date-and-update-data" aria-label="Permalink to &quot;Add an Operation to Check The Published Date and Update Data&quot;">​</a></h3><ol start="7"><li><p><a href="/configuration/flows/operations.html#operations">Create a new Operation</a></p><p><img src="https://cdn.directus.io/docs/v9/headless-cms/how-to-packet-20220222A/scheduling-content-update-articles.webp" alt="Inside a Directus Flow, the Create Operation interface is shown. The Name of the operation is &quot;Update Articles&quot;. The Key is &quot;update_articles&quot;. The type of Operation is &quot;Update Data&quot;. The Collection for the operation is &quot;Articles&quot;. The Payload for the operation is a JSON object with key - status and value of published. There is also a JSON object for the Query field. A filter that checks that the item status is equal to &quot;scheduled&quot; and the date_published is less than or equal to the current timestamp."></p><p>a. For the type of Operation, select <strong>Update Item</strong></p><p>b. <strong>Name</strong> your operation, i.e. <code>Update Articles</code> or similar.</p><p>c. Under <strong>Collection</strong>, choose your content collection i.e. <code>Articles</code> in our example.</p><p>d. Check <strong>Emit Events</strong></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Emit Events will trigger an <code>item.update</code> event in this flow. Be careful when using it in your Flows to avoid creating infinite loops where Flows continuously trigger one another.</p></div><p>e. Set your <strong>Payload</strong></p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">published</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>f. Add your filter rule in the <strong>Query</strong> field.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">filter</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">_and</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">status</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">_eq</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scheduled</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">date_published</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">_lte</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">$NOW</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>g. Save this Operation</p><p>h. Save your Flow</p></li></ol><h3 id="trigger-a-new-build-for-your-static-site" tabindex="-1">Trigger a New Build for Your Static Site <a class="header-anchor" href="#trigger-a-new-build-for-your-static-site" aria-label="Permalink to &quot;Trigger a New Build for Your Static Site&quot;">​</a></h3><p>In this recipe, we&#39;ll terminate the flow here because we&#39;ll use a separate flow to trigger the build or deployment process for your site. This approach helps keep everything modular and easier to maintain.</p><p>If you haven&#39;t already, you&#39;ll want to configure one of the recipes below.</p><ul><li><a href="/cookbook/flows/trigger-static-site-build-netlify.html">Triggering a static site build at Netlify</a></li><li><a href="/cookbook/flows/trigger-static-site-build-vercel.html">Triggering a static site build at Vercel</a></li></ul><p>You checked Emit Events in the Operation during Step 7. This will emit an <code>item.update</code> event which is a trigger for the Flows in the recipes above.</p><h2 id="final-tips" tabindex="-1">Final Tips <a class="header-anchor" href="#final-tips" aria-label="Permalink to &quot;Final Tips&quot;">​</a></h2><p><strong>Tips</strong></p><ul><li>Make sure to test your flow several times to ensure everything is working as expected.</li><li>As you add other collections that are published on your static site or frontend, make sure you update this Flow to include those collections in your Trigger.</li></ul>`,26);function f(t,g,y,D,m,F){return i(),l("div",null,[c,e("blockquote",null,[e("p",null,s(t.$frontmatter.description),1)]),e("div",p,[e("p",d,"Author: "+s(t.$frontmatter.author),1),e("p",null,[h,a(" "+s(t.$frontmatter.directus_version),1)])]),u])}const C=o(r,[["render",f]]);export{w as __pageData,C as default};
