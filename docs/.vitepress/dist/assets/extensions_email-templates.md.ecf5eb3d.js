import{_ as e,c as t,o as a,R as s}from"./chunks/framework.70e71619.js";const _=JSON.parse('{"title":"Email Templates","description":"A guide on how to build custom Email Templates in Directus.","frontmatter":{"description":"A guide on how to build custom Email Templates in Directus.","readTime":"1 min read"},"headers":[],"relativePath":"extensions/email-templates.md","lastUpdated":1682552691000}'),l={name:"extensions/email-templates.md"},o=s('<h1 id="email-templates" tabindex="-1">Email Templates <small></small> <a class="header-anchor" href="#email-templates" aria-label="Permalink to &quot;Email Templates &lt;small&gt;&lt;/small&gt;&quot;">​</a></h1><blockquote><p>Templates can be used to add custom templates for your emails, or to override the system emails used for things like resetting a password or inviting a user.</p></blockquote><h2 id="_1-create-a-template-file" tabindex="-1">1. Create a template file <a class="header-anchor" href="#_1-create-a-template-file" aria-label="Permalink to &quot;1. Create a template file&quot;">​</a></h2><p>Custom email templates are stored in the <code>templates</code> folder in your extensions folder. Every template is a <a href="https://liquidjs.com" target="_blank" rel="noreferrer"><code>liquid</code></a> file that can render whatever you want!</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">/extensions/templates/&lt;template-name&gt;.liquid</span></span></code></pre></div><p>To replace a system template with your own, simply name it <code>password-reset</code> or <code>user-invitation</code> for the password reset or user invite emails respectively.</p><div class="tip custom-block"><p class="custom-block-title">Variables</p><p>When overriding the default email templates, make sure to include the <code>url</code> variable somewhere. A password reset email wouldn&#39;t be that useful without the link to go reset your password!</p></div>',7),i=[o];function r(n,m,p,d,c,u){return a(),t("div",null,i)}const f=e(l,[["render",r]]);export{_ as __pageData,f as default};
